import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Konstruktor Faktori',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(title: 'Contoh Konstruktor Faktori'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  AksesAPI() async {
    var hasil = await http
        .get(Uri.parse("http://192.168.20.216:8080/pegawai"))
        .timeout(const Duration(seconds: 10));
    Map<String, dynamic> jsonHasil = jsonDecode(hasil.body);

    //contoh 1 penggunaan konstruktor faktori
    Autogenerated objAllPeg = Autogenerated.fromJson(jsonHasil);
    //cetak id dari objek 0
    //contoh output: 1
    print(objAllPeg.pegawai![0].id);

    //contoh 2 penggunaan konstruktor faktori
    Pegawai objPeg = Pegawai.fromJson(jsonHasil["pegawai"][0]);
    print(objPeg.id);

    //cetak seluruh objek
    //contoh output: [id:1, nama: Fulan, tanggal lahir: 12122020, jenis kelamin: L, id:2, nama: John Doe, tanggal lahir: 20122020, jenis kelamin: L]
    print(objAllPeg);
  }

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    AksesAPI();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: const Center(
        child: Column(
          children: <Widget>[],
        ),
      ),
    );
  }
}

class Autogenerated {
  List<Pegawai>? pegawai;

  Autogenerated({this.pegawai});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['pegawai'] != null) {
      pegawai = <Pegawai>[];
      json['pegawai'].forEach((v) {
        pegawai!.add(new Pegawai.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.pegawai != null) {
      data['pegawai'] = this.pegawai!.map((v) => v.toJson()).toList();
    }
    return data;
  }

  @override
  String toString() => this.pegawai.toString();
}

class Pegawai {
  int? id;
  String? nama;
  String? tanggalLahir;
  String? jenisKelamin;

  Pegawai({this.id, this.nama, this.tanggalLahir, this.jenisKelamin});

  Pegawai.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    nama = json['nama'];
    tanggalLahir = json['tanggal_lahir'];
    jenisKelamin = json['jenis_kelamin'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['nama'] = this.nama;
    data['tanggal_lahir'] = this.tanggalLahir;
    data['jenis_kelamin'] = this.jenisKelamin;
    return data;
  }

  @override
  String toString() =>
      "id:${this.id}, nama: ${this.nama}, tanggal lahir: ${this.tanggalLahir}, jenis kelamin: ${this.jenisKelamin}";
}
